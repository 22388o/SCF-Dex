{"version":3,"sources":["helpers.js","store/selectors.js","components/Navbar.js","store/actions.js","store/interactions.js","components/Spinner.js","components/OrderBook.js","components/Trades.js","components/MyTransactions.js","components/PriceChart.config.js","components/PriceChart.js","components/Balance.js","components/NewOrder.js","components/Content.js","components/PreContent.js","components/App.js","store/reducers.js","store/configureStore.js","reportWebVitals.js","index.js"],"names":["ETHER_ADDRESS","GREEN","RED","DECIMALS","ether","wei","tokens","formatBalance","balance","Math","round","account","state","get","accountSelector","createSelector","a","web3Selector","w","tokenLoaded","tokenSelector","tl","t","exchangeLoaded","exchangeSelector","el","e","contractsLoadedSelector","cancelledOrdersLoaded","cancelledOrders","loaded","filledOrdersLoaded","o","filledOrdersLoadedSelector","filledOrders","filledOrdersSelector","orders","sort","b","timestamp","decorateFilledOrders","previousOrder","map","order","decorateOrder","decorateFilledOrder","etherAmount","tokenAmount","tokenGive","amountGive","amountGet","precision","tokenPrice","formattedTimestamp","moment","unix","format","tokenPriceClass","id","orderId","openOrders","all","allOrders","filled","cancelled","reject","orderFilled","some","orderCancelled","orderBookLoaded","allOrdersLoaded","orderBookLoadedSelector","orderBookSelector","decorateOrderBookOrders","groupBy","buyOrders","sellOrders","decorateOrderBookOrder","orderType","orderTypeClass","orderFillAction","myFilledOrdersLoadedSelector","myFilledOrdersSelector","filter","user","userFill","decorateMyFilledOrders","decorateMyFilledOrder","orderSign","myOpenOrdersLoadedSelector","myOpenOrdersSelector","decorateMyOpenOrders","decorateMyOpenOrder","priceChartLoadedSelector","priceChartSelector","secondLastOrder","lastOrder","slice","length","lastPrice","lastPriceChange","series","data","buildGraphData","startOf","Object","keys","hour","group","open","high","maxBy","low","minBy","close","x","Date","y","orderCancellingSelector","status","orderFillingSelector","balancesLoadingSelector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","etherDepositAmountSelector","amount","etherWithdrawAmountSelector","tokenDepositAmountSelector","tokenWithdrawAmountSelector","buyOrderSelector","sellOrderSelector","Navbar","className","role","href","this","props","target","rel","Component","connect","web3AccountLoaded","type","tokenBalanceLoaded","exchangeEtherBalanceLoaded","exchangeTokenBalanceLoaded","loadWeb3","dispatch","Promise","resolve","window","addEventListener","ethereum","web3","Web3","enable","console","log","alert","location","assign","connection","loadAccount","eth","getAccounts","accounts","loadToken","networkId","token","Contract","Token","abi","networks","address","contract","loadExchange","exchange","Exchange","loadAllOrders","getPastEvents","fromBlock","toBlock","cancelStream","event","returnValues","tradeStream","orderStream","subscribeToEvents","events","Cancel","error","Trade","Deposit","Withdraw","Order","loadBalances","getBalance","etherBalance","methods","balanceOf","call","tokenBalance","exchangeEtherBalance","options","exchangeTokenBalance","refresher","subscribe","unsubscribe","Spinner","renderOrder","OverlayTrigger","placement","overlay","Tooltip","onClick","fillOrder","send","from","on","hash","showOrderBook","orderBook","OrderBook","orderFilling","Trades","showMyFilledOrders","myFilledOrders","showMyOpenOrders","myOpenOrders","cancelOrder","MyTransactions","Tabs","defaultActiveKey","Tab","eventKey","title","myOpenOrdersLoaded","orderCancelling","chartOptions","chart","animations","enabled","toolbar","show","width","tooltip","theme","style","fontSize","fontFamily","undefined","formatter","marker","items","display","fixed","position","offsetX","offsetY","xaxis","labels","colors","cssClass","yaxis","minWidth","maxWidth","color","rotate","showPriceChart","priceChart","height","PriceChart","priceChartLoaded","showForm","etherDepositAmount","tokenDepositAmount","etherWithdrawAmount","tokenWithdrawAmount","onSubmit","preventDefault","depositEther","value","utils","toWei","placeholder","onChange","required","approve","depositToken","withdrawEther","withdrawToken","Balance","loadBlockchainData","balancesLoading","buyOrder","sellOrder","showBuyTotal","showSellTotal","tokenGet","price","toString","makeOrder","makeBuyOrder","makeSellOrder","NewOrder","making","Content","PreContent","App","net","getId","contractsLoaded","rootReducer","combineReducers","action","findIndex","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","createStore","applyMiddleware","document","getElementById"],"mappings":"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","file":"static/js/main.a23fcf44.chunk.js","sourcesContent":["import Web3 from 'web3';\nexport const ETHER_ADDRESS = '0x0000000000000000000000000000000000000000';\n\nexport const GREEN = 'success';\nexport const RED = 'danger';\n\nexport const DECIMALS = (10**18);\n\n// Shortcut to avoid passing around \n// web3 connection\nexport const ether = (wei) => {\n  if(wei) {\n    return(wei / DECIMALS); // 18 decimal places\n  }\n};\n\n// Same as ether\nexport const tokens = ether;\n\n// connect to a wallet like metamask\nexport const getWeb3 = () => {\n  return new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      // or invite the user to install metamask\n      else {\n        // const provider = new Web3.providers.HttpProvider(\n        //   \"http://localhost:9545\"\n        // );\n        // const web3 = new Web3(provider);\n        // console.log(\"No web3 instance injected, using Local web3.\");\n        // resolve(web3);\n           window.alert('Please install MetaMask')\n           window.location.assign(\"https://metamask.io/\")\n      }\n    });\n  });\n};\n\n\nexport const formatBalance = (balance) => {\n  // 4 decimal places\n  const precision = 10000;\n  balance = ether(balance);\n  // Use 4 decimal places\n  balance = Math\n  .round(balance * precision) / precision;\n\n  return balance;\n};","import { get, groupBy, reject, maxBy, minBy } \nfrom 'lodash';\nimport { createSelector } from 'reselect';\nimport moment from 'moment';\nimport { \n  ETHER_ADDRESS,\n  GREEN,\n  RED,\n  ether,\n  tokens\n} from '../helpers';\n\n// TODO: Move me to helpers file\nexport const formatBalance = (balance) => {\n  // 4 decimal places\n  const precision = 10000;\n  balance = ether(balance);\n  // Use 4 decimal places\n  balance = Math\n  .round(balance * precision) / precision;\n\n  return balance;\n};\n\nconst account = state => get(state, 'web3.account');\nexport const accountSelector = createSelector(account, a => a);\n\nconst web3 = state => get(state, 'web3.connection');\nexport const web3Selector = createSelector(web3, w => w);\n\nconst tokenLoaded = state => get(state, 'token.loaded', false);\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl);\n\nconst token = state => get(state, 'token.contract');\nexport const tokenSelector = createSelector(token, t => t);\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false);\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el);\n\nconst exchange = state => get(state, 'exchange.contract');\nexport const exchangeSelector = createSelector(exchange, e => e);\n\nexport const contractsLoadedSelector = createSelector(\n  tokenLoaded,\n  exchangeLoaded,\n  (tl, el) => (tl && el)\n);\n\n// All Orders\nconst allOrdersLoaded = state => get(\n  state, 'exchange.allOrders.loaded', false);\nconst allOrders = state => get(\n  state, 'exchange.allOrders.data', []);\n\n// Cancelled orders\nconst cancelledOrdersLoaded = state => get(\n  state,\n  'exchange.cancelledOrders.loaded',\n  false\n );\nexport const cancelledOrdersLoadedSelector = createSelector(\n  cancelledOrdersLoaded, \n  loaded => loaded\n );\n\nconst cancelledOrders = state => get(\n  state, \n  'exchange.cancelledOrders.data', \n  []\n );\nexport const cancelledOrdersSelector = createSelector(cancelledOrders, o => o);\n\n// Filled Orders\nconst filledOrdersLoaded = state => get(\n  state, \n  'exchange.filledOrders.loaded', \n  false\n );\nexport const filledOrdersLoadedSelector = createSelector(\n  filledOrdersLoaded, \n  loaded => loaded\n );\n\nconst filledOrders = state => get(\n  state, \n  'exchange.filledOrders.data', \n  []\n );\nexport const filledOrdersSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending \n    // for price comparison\n    orders = orders.sort(\n      (a,b) => a.timestamp - b.timestamp);\n    // Decorate the orders\n    orders = decorateFilledOrders(orders);\n    // Sort orders by date descending \n    // for display\n    orders = orders.sort(\n      (a,b) => b.timestamp - a.timestamp);\n    return orders;\n  }\n);\n\nconst decorateFilledOrders = (orders) => {\n  // Track previous order to compare history\n  let previousOrder = orders[0];\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order);\n      order = decorateFilledOrder(\n        order, previousOrder);\n      // Update the previous order \n      // once it's decorated\n      previousOrder = order; \n      return order;\n    })\n  );\n};\n\nconst decorateOrder = (order) => {\n  let etherAmount;\n  let tokenAmount;\n\n  if(order.tokenGive === ETHER_ADDRESS) {\n    etherAmount = order.amountGive;\n    tokenAmount = order.amountGet;\n  } else {\n    etherAmount = order.amountGet;\n    tokenAmount = order.amountGive;\n  }\n\n  // Calculate token price to 9 decimal places\n  const precision = 1000000000;\n  let tokenPrice = (etherAmount / tokenAmount);\n  tokenPrice = Math\n  .round(tokenPrice * precision) / precision;\n\n  return({\n    ...order,\n    etherAmount: ether(etherAmount),\n    tokenAmount: tokens(tokenAmount),\n    tokenPrice,\n    formattedTimestamp: moment.unix(\n      order.timestamp).format('h:mm:ss a M/D')\n  });\n};\n\nconst decorateFilledOrder = (order, previousOrder) => {\n  return({\n    ...order,\n    tokenPriceClass: tokenPriceClass(\n      order.tokenPrice, order.id, previousOrder)\n  });\n};\n\nconst tokenPriceClass = (tokenPrice, orderId, previousOrder) => {\n  // Show green price if only one order exists\n  if(previousOrder.id === orderId) {\n    return GREEN;\n  }\n\n  // Show green price if order price \n  // higher than previous order\n  // Show red price if order price \n  // lower than previous order\n  if(previousOrder.tokenPrice <= tokenPrice) {\n    return GREEN; // success\n  } else {\n    return RED; // danger\n  }\n};\n\nconst openOrders = state => {\n  const all = allOrders(state);\n  const filled = filledOrders(state);\n  const cancelled = cancelledOrders(state);\n\n  const openOrders = reject(all, (order) => {\n    const orderFilled = filled.some(\n      (o) => o.id === order.id);\n    const orderCancelled = cancelled.some(\n      (o) => o.id === order.id);\n    return(orderFilled || orderCancelled);\n  });\n\n  return openOrders;\n};\n\n\nconst orderBookLoaded = state => cancelledOrdersLoaded(state) &&\n  filledOrdersLoaded(state) &&\n   allOrdersLoaded(state);\nexport const orderBookLoadedSelector = createSelector(\n  orderBookLoaded, loaded => loaded);\n\n// Create the order book\nexport const orderBookSelector = createSelector(\n  openOrders,\n  (orders) => {\n    // Decorate orders\n    orders = decorateOrderBookOrders(orders);\n    // Group orders by \"orderType\"\n    orders = groupBy(orders, 'orderType');\n    // Fetch buy orders\n    const buyOrders = get(orders, 'buy', []);\n    // Sort buy orders by token price\n    orders = {\n      ...orders,\n      buyOrders: buyOrders.sort(\n        (a,b) => b.tokenPrice - a.tokenPrice)\n    };\n    // Fetch sell orders\n    const sellOrders = get(orders, 'sell', []);\n    // Sort sell orders by token price\n    orders = {\n      ...orders,\n      sellOrders: sellOrders.sort(\n        (a,b) => b.tokenPrice - a.tokenPrice)\n    };\n    return orders;\n  }\n);\n\nconst decorateOrderBookOrders = (orders) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order);\n      order = decorateOrderBookOrder(order);\n      return(order);\n    })\n  );\n};\n\nconst decorateOrderBookOrder = (order) => {\n  const orderType = (order.tokenGive === ETHER_ADDRESS ?\n   'buy' : 'sell');\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ?\n     GREEN : RED),\n    orderFillAction: (orderType === 'buy' ?\n     'sell' : 'buy')\n  });\n};\n\nexport const myFilledOrdersLoadedSelector = createSelector(\n  filledOrdersLoaded, loaded => loaded);\n\nexport const myFilledOrdersSelector = createSelector(\n  account,\n  filledOrders,\n  (account, orders) => {\n    // Find our orders\n    orders = orders.filter(\n      o => (o.user === account) ||\n       (o.userFill === account));\n    // Sort by date ascending\n    orders = orders.sort(\n      (a,b) => a.timestamp - b.timestamp);\n    // Decorate orders - add display attributes\n    orders = decorateMyFilledOrders(\n      orders, account);\n    return orders;\n  }\n);\n\nconst decorateMyFilledOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order);\n      order = decorateMyFilledOrder(\n        order, account);\n      return order;\n    })\n  );\n};\n\nconst decorateMyFilledOrder = (order, account) => {\n  const myOrder = order.user === account;\n\n  let orderType;\n  if(myOrder) {\n    orderType = (order.tokenGive === ETHER_ADDRESS ? \n    'buy' : 'sell');\n  } else {\n    orderType = (order.tokenGive === ETHER_ADDRESS ? \n      'sell' : 'buy');\n  }\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ?\n     GREEN : RED),\n    orderSign: (orderType === 'buy' ? '+' : '-')\n  });\n};\n\nexport const myOpenOrdersLoadedSelector = createSelector(\n  orderBookLoaded, loaded => loaded);\n\nexport const myOpenOrdersSelector = createSelector(\n  account,\n  openOrders,\n  (account, orders) => {\n    // Filter orders created by current account\n    orders = orders.filter(\n      (o) => o.user === account);\n    // Decorate orders - add display attributes\n    orders = decorateMyOpenOrders(orders);\n    // Sort orders by date descending\n    orders = orders.sort(\n      (a,b) => b.timestamp - a.timestamp);\n    return orders;\n  }\n);\n\nconst decorateMyOpenOrders = (orders, account) => {\n  return(\n    orders.map((order) => {\n      order = decorateOrder(order);\n      order = decorateMyOpenOrder(order, account);\n      return(order);\n    })\n  );\n};\n\nconst decorateMyOpenOrder = (order, account) => {\n  let orderType = (order.tokenGive === ETHER_ADDRESS ? \n    'buy' : 'sell');\n\n  return({\n    ...order,\n    orderType,\n    orderTypeClass: (orderType === 'buy' ? GREEN : RED)\n  });\n};\n\nexport const priceChartLoadedSelector = createSelector(\n  filledOrdersLoaded, loaded => loaded);\n\nexport const priceChartSelector = createSelector(\n  filledOrders,\n  (orders) => {\n    // Sort orders by date ascending \n    // to compare history\n    orders = orders.sort(\n      (a,b) => a.timestamp - b.timestamp);\n    // Decorate orders - add display attributes\n    orders = orders.map((o) => decorateOrder(o));\n    // Get last 2 order for \n    // final price & price change\n    let secondLastOrder, lastOrder;\n    [secondLastOrder, lastOrder] = orders.slice(\n      orders.length - 2, orders.length);\n    // get last order price\n    const lastPrice = get(\n      lastOrder, 'tokenPrice', 0);\n    // get second last order price\n    const secondLastPrice = get(\n      secondLastOrder, 'tokenPrice', 0);\n\n    return({\n      lastPrice,\n      lastPriceChange: (lastPrice >= secondLastPrice ?\n       '+' : '-'),\n      series: [{\n        data: buildGraphData(orders)\n      }]\n    });\n  }\n);\n\nconst buildGraphData = (orders) => {\n  // Group the orders by hour for the graph\n  orders = groupBy(\n    orders,\n    (o) => moment.unix(o.timestamp)\n    .startOf('hour').format());\n  // Get each hour where data exists\n  const hours = Object.keys(orders);\n  // Build the graph series\n  const graphData = hours.map(\n    (hour) => {\n    // Fetch all the orders from current hour\n    const group = orders[hour];\n    // Calculate price values \n    // - open, high, low, close\n    // first order\n    const open = group[0]; \n    // high price\n    const high = maxBy(group, 'tokenPrice');\n    // low price \n    const low = minBy(group, 'tokenPrice');\n    // last order \n    const close = group[group.length - 1];\n\n    return({\n      x: new Date(hour),\n      y: [\n         open.tokenPrice,\n         high.tokenPrice,\n         low.tokenPrice,\n         close.tokenPrice\n         ]\n    });\n  });\n\n  return graphData;\n};\n\nconst orderCancelling = state => get(\n  state, 'exchange.orderCancelling', false);\nexport const orderCancellingSelector = createSelector(\n  orderCancelling, status => status);\n\nconst orderFilling = state => get(\n  state, 'exchange.orderFilling', false);\nexport const orderFillingSelector = createSelector(orderFilling, status => status);\n\n// BALANCES\nconst balancesLoading = state => get(\n  state, 'exchange.balancesLoading', true);\nexport const balancesLoadingSelector = createSelector(\n  balancesLoading, status => status);\n\nconst etherBalance = state => get(state, 'web3.balance', 0);\nexport const etherBalanceSelector = createSelector(\n  etherBalance,\n  (balance) => {\n    return formatBalance(balance);\n  }\n);\n\nconst tokenBalance = state => get(state, 'token.balance', 0);\nexport const tokenBalanceSelector = createSelector(\n  tokenBalance,\n  (balance) => {\n    return formatBalance(balance);\n  }\n);\n\nconst exchangeEtherBalance = state => get(state, 'exchange.etherBalance', 0);\nexport const exchangeEtherBalanceSelector = createSelector(\n  exchangeEtherBalance,\n  (balance) => {\n    return formatBalance(balance);\n  }\n);\n\nconst exchangeTokenBalance = state => get(state, 'exchange.tokenBalance', 0);\nexport const exchangeTokenBalanceSelector = createSelector(\n  exchangeTokenBalance,\n  (balance) => {\n    return formatBalance(balance);\n  }\n);\n\nconst etherDepositAmount = state => get(\n  state, 'exchange.etherDepositAmount', null);\nexport const etherDepositAmountSelector = createSelector(\n  etherDepositAmount, amount => amount);\n\nconst etherWithdrawAmount = state => get(\n  state, 'exchange.etherWithdrawAmount', null);\nexport const etherWithdrawAmountSelector = createSelector(\n  etherWithdrawAmount, amount => amount);\n\nconst tokenDepositAmount = state => get(\n  state, 'exchange.tokenDepositAmount', null);\nexport const tokenDepositAmountSelector = createSelector(\n  tokenDepositAmount, amount => amount);\n\nconst tokenWithdrawAmount = state => get(\n  state, 'exchange.tokenWithdrawAmount', null);\nexport const tokenWithdrawAmountSelector = createSelector(\n  tokenWithdrawAmount, amount => amount);\n\nconst buyOrder = state => get(state, 'exchange.buyOrder', {});\nexport const buyOrderSelector = createSelector(buyOrder, order => order);\n\nconst sellOrder = state => get(state, 'exchange.sellOrder', {});\nexport const sellOrderSelector = createSelector(sellOrder, order => order);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { accountSelector } from '../store/selectors';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\" role=\"navigation\">\n          <a className=\"navbar-brand\" href=\"https://akmb-dev.github.io/SCF-Dex/\"> SCF Dex </a>\n{/*\n        <button className=\"navbar-toggler\" \n        type=\"button\" data-toggle=\"collapse\" \n        data-target=\"#navbarNavDropdown\" \n        aria-controls=\"navbarNavDropdown\" \n        aria-expanded=\"false\" \n        aria-label=\"Toggle navigation\"> \n        <span className=\"navbar-toggler-icon\">\n          </span>\n        </button>\n*/}\n      <div className=\"container\">\n        <ul className=\"nav navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link small\"\n              href={`https://etherscan.io/address/${this.props.account}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {this.props.account}\n            </a>\n          </li>\n        </ul>\n      </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: accountSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","// WEB3\nexport function web3Loaded(connection) {\n  return {\n    type: 'WEB3_LOADED',\n    connection\n  }\n}\n\nexport function web3AccountLoaded(account) {\n  return {\n    type: 'WEB3_ACCOUNT_LOADED',\n    account\n  }\n}\n\n// TOKEN\nexport function tokenLoaded(contract) {\n  return {\n    type: 'TOKEN_LOADED',\n    contract\n  }\n}\n\n// EXCHANGE\nexport function exchangeLoaded(contract) {\n  return {\n    type: 'EXCHANGE_LOADED',\n    contract\n  }\n}\n\nexport function cancelledOrdersLoaded(\n\tcancelledOrders) {\n  return {\n    type: 'CANCELLED_ORDERS_LOADED',\n    cancelledOrders\n  }\n}\n\nexport function filledOrdersLoaded(\n\tfilledOrders) {\n  return {\n    type: 'FILLED_ORDERS_LOADED',\n    filledOrders\n  }\n}\n\nexport function allOrdersLoaded(allOrders) {\n  return {\n    type: 'ALL_ORDERS_LOADED',\n    allOrders\n  }\n}\n\n// Cancel Order\nexport function orderCancelling() {\n  return {\n    type: 'ORDER_CANCELLING'\n  }\n}\n\nexport function orderCancelled(order) {\n  return {\n    type: 'ORDER_CANCELLED',\n    order\n  }\n}\n\n// Fill Order\nexport function orderFilling() {\n  return {\n    type: 'ORDER_FILLING'\n  }\n}\n\nexport function orderFilled(order) {\n  return {\n    type: 'ORDER_FILLED',\n    order\n  }\n}\n\n// Balances\nexport function etherBalanceLoaded(balance) {\n  return {\n    type: 'ETHER_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function tokenBalanceLoaded(balance) {\n  return {\n    type: 'TOKEN_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function exchangeEtherBalanceLoaded(\n\tbalance) {\n  return {\n    type: 'EXCHANGE_ETHER_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function exchangeTokenBalanceLoaded(\n\tbalance) {\n  return {\n    type: 'EXCHANGE_TOKEN_BALANCE_LOADED',\n    balance\n  }\n}\n\nexport function balancesLoaded() {\n  return {\n    type: 'BALANCES_LOADED'\n  }\n}\n\nexport function balancesLoading() {\n  return {\n    type: 'BALANCES_LOADING'\n  }\n}\n\nexport function etherDepositAmountChanged(\n\tamount) {\n  return {\n    type: 'ETHER_DEPOSIT_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function etherWithdrawAmountChanged(\n\tamount) {\n  return {\n    type: 'ETHER_WITHDRAW_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function tokenDepositAmountChanged(\n\tamount) {\n  return {\n    type: 'TOKEN_DEPOSIT_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function tokenWithdrawAmountChanged(\n\tamount) {\n  return {\n    type: 'TOKEN_WITHDRAW_AMOUNT_CHANGED',\n    amount\n  }\n}\n\n// Buy Order\nexport function buyOrderAmountChanged(amount) {\n  return {\n    type: 'BUY_ORDER_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function buyOrderPriceChanged(price) {\n  return {\n    type: 'BUY_ORDER_PRICE_CHANGED',\n    price\n  }\n}\n\nexport function buyOrderMaking(price) {\n  return {\n    type: 'BUY_ORDER_MAKING'\n  }\n}\n\n// Generic Order\nexport function orderMade(order) {\n  return {\n    type: 'ORDER_MADE',\n    order\n  }\n}\n\n// Sell Order\nexport function sellOrderAmountChanged(amount) {\n  return {\n    type: 'SELL_ORDER_AMOUNT_CHANGED',\n    amount\n  }\n}\n\nexport function sellOrderPriceChanged(price) {\n  return {\n    type: 'SELL_ORDER_PRICE_CHANGED',\n    price\n  }\n}\n\nexport function sellOrderMaking(price) {\n  return {\n    type: 'SELL_ORDER_MAKING'\n  }\n}\n","import {\n  web3Loaded,\n  web3AccountLoaded,\n  tokenLoaded,\n  exchangeLoaded,\n  cancelledOrdersLoaded,\n  filledOrdersLoaded,\n  allOrdersLoaded,\n  orderCancelling,\n  orderCancelled,\n  orderFilling,\n  orderFilled,\n  etherBalanceLoaded,\n  tokenBalanceLoaded,\n  exchangeEtherBalanceLoaded,\n  exchangeTokenBalanceLoaded,\n  balancesLoaded,\n  balancesLoading,\n  buyOrderMaking,\n  sellOrderMaking,\n  orderMade\n} from './actions';\nimport Token from '../build/Token.json';\nimport Exchange from '../build/Exchange.json';\nimport { ETHER_ADDRESS, getWeb3 }\nfrom '../helpers';\n\nexport const loadWeb3 = async (dispatch) => {\n  const web3 = await getWeb3();\n    dispatch(web3Loaded(web3));\n    return web3;\n};\n\nexport const loadAccount = \nasync (web3, dispatch) => {\n  const accounts = await web3.eth.getAccounts();\n  const account = accounts[0];\n  dispatch(web3AccountLoaded(account));\n  return account;\n};\n\nexport const loadToken = \nasync (web3, networkId, dispatch) => {\n  try {\n    const token = new web3.eth\n    .Contract(\n    \tToken.abi,\n    \tToken\n    \t.networks[networkId]\n    \t.address\n    );\n    dispatch(tokenLoaded(token));\n    return token;\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.');\n    return null;\n  }\n};\n\nexport const loadExchange = \nasync (web3, networkId, dispatch) => {\n  try {\n    const exchange = new web3.eth\n      .Contract(\n      \tExchange.abi,\n      \tExchange\n      \t.networks[networkId]\n      \t.address\n      );\n    dispatch(exchangeLoaded(exchange));\n    return exchange;\n  } catch (error) {\n    console.log('Contract not deployed to the current network. Please select another network with Metamask.')\n    return null;\n  }\n};\n\nexport const loadAllOrders = \n  async (exchange, dispatch) => {\n  // Fetch cancelled orders with the \n  // \"Cancel\" event stream\n  const cancelStream = await exchange\n  .getPastEvents(\n  \t'Cancel',\n  \t{ fromBlock: 0,\n  \ttoBlock: 'latest' }\n  );\n  // Format cancelled orders\n  const cancelledOrders = cancelStream\n  .map((event) => event.returnValues)\n  // Add cancelled orders to the redux store\n  dispatch(cancelledOrdersLoaded(cancelledOrders));\n\n  // Fetch filled orders with the \n  // \"Trade\" event stream\n  const tradeStream = await exchange\n  .getPastEvents('Trade',\n   { fromBlock: 0, toBlock: 'latest' });\n  // Format filled orders\n  const filledOrders = tradeStream.map(\n  \t(event) => event.returnValues);\n  // Add cancelled orders to the redux store\n  dispatch(filledOrdersLoaded(filledOrders));\n\n  // Load order stream\n  const orderStream = await exchange\n  .getPastEvents('Order',\n   { fromBlock: 0,  toBlock: 'latest' });\n  // Format order stream\n  const allOrders = orderStream.map(\n  \t(event) => event.returnValues);\n  // Add open orders to the redux store\n  dispatch(allOrdersLoaded(allOrders));\n};\n\nexport const subscribeToEvents = \nasync (exchange, dispatch) => {\n  exchange.events.Cancel({},\n   (error, event) => {\n    dispatch(\n    \torderCancelled(event.returnValues));\n  });\n\n  exchange.events.Trade({}, (error, event) => {\n    dispatch(orderFilled(event.returnValues));\n  });\n\n\n  exchange.events.Deposit({}, (error, event) => {\n    dispatch(balancesLoaded());\n  });\n\n  exchange.events.Withdraw({}, (error, event) => {\n    dispatch(balancesLoaded());\n  });\n\n\n\n  exchange.events.Order({}, (error, event) => {\n    dispatch(orderMade(event.returnValues));\n  });\n};\n\nexport const cancelOrder =\n (dispatch, exchange, order, account) => {\n  exchange.methods.cancelOrder(order.id)\n  .send({ from: account })\n  .on('transactionHash', (hash) => {\n     dispatch(orderCancelling());\n  })\n  .on('error', (error) => {\n    console.log(error);\n    window.alert('There was an error!');\n  });\n};\n\nexport const fillOrder = \n(dispatch, exchange, order, account) => {\n  exchange.methods.fillOrder(order.id)\n  .send({ from: account })\n  .on('transactionHash', (hash) => {\n     dispatch(orderFilling());\n  })\n  .on('error', (error) => {\n    console.log(error);\n    window.alert('There was an error!');\n  });\n};\n\nexport const loadBalances = \nasync (dispatch, web3, exchange, token, account) => {\n  if(typeof account !== 'undefined') {\n      // Ether balance in wallet\n      const etherBalance = await web3.eth\n      .getBalance(account);\n      dispatch(etherBalanceLoaded(etherBalance));\n\n      // Token balance in wallet\n      const tokenBalance = await token.methods\n      .balanceOf(account).call();\n      dispatch(tokenBalanceLoaded(tokenBalance));\n\n      // Ether balance in exchange\n      const exchangeEtherBalance = \n      await exchange.methods\n      .balanceOf(ETHER_ADDRESS, account).call();\n      dispatch(\n      \texchangeEtherBalanceLoaded(\n      \t\texchangeEtherBalance));\n\n      // Token balance in exchange\n      const exchangeTokenBalance = \n      await exchange.methods\n      .balanceOf(token.options.address, account)\n      .call();\n      dispatch(\n      \texchangeTokenBalanceLoaded(\n      \t\texchangeTokenBalance));\n\n      // Trigger all balances loaded\n      dispatch(balancesLoaded());\n    } else {\n      window.alert('Please login with MetaMask');\n    }\n};\n\nconst refresher = \n(dispatch, web3, exchange, token, account) => {\n  const subscription = web3.eth\n  .subscribe('newBlockHeaders',\n   () => loadBalances(\n    dispatch, web3, exchange, token, account));\n  subscription.unsubscribe();\n};\nexport const depositEther = \n(dispatch, exchange, web3, amount, account, token) => {\n  exchange.methods.depositEther()\n  .send({ \n  \tfrom: account,\n  \tvalue: web3.utils.toWei(amount, 'ether') })\n  .on('transactionHash', async (hash) => {\n    dispatch(balancesLoading());\n    refresher(\n    \tdispatch,\n    \tweb3,\n    \texchange,\n    \ttoken,\n    \taccount\n   \t);\n  })\n  .on('error',(error) => {\n    console.error(error);\n    window.alert(`There was an error!`);\n  });\n};\n\nexport const withdrawEther = (dispatch, exchange, web3, amount, account, token) => {\n  exchange.methods\n  .withdrawEther(\n  \tweb3.utils.toWei(amount, 'ether'))\n    .send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(balancesLoading());\n    refresher(\n    \tdispatch,\n    \tweb3,\n    \texchange,\n    \ttoken,\n    \taccount\n    );\n  })\n  .on('error',(error) => {\n    console.error(error);\n    window.alert(`There was an error!`);\n  });\n};\n\nexport const depositToken = (dispatch, exchange, web3, token, amount, account) => {\n  amount = web3.utils.toWei(amount, 'ether');\n\n  token.methods\n  .approve(exchange.options.address, amount)\n  .send({ from: account })\n  .on('transactionHash', (hash) => {\n    exchange.methods\n    .depositToken(token.options.address, amount)\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n      dispatch(balancesLoading());\n      refresher(\n      \tdispatch,\n      \tweb3,\n      \texchange,\n      \ttoken,\n      \taccount\n      );\n    })\n    .on('error',(error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n    });\n  });\n};\n\nexport const withdrawToken = (dispatch, exchange, web3, token, amount, account) => {\n  exchange.methods.withdrawToken(\n  \ttoken.options.address,\n  \tweb3.utils.toWei(amount, 'ether'))\n    .send({ from: account })\n    .on('transactionHash', (hash) => {\n    dispatch(balancesLoading())\n    refresher(dispatch, web3, exchange, token, account)\n    })\n    .on('error',(error) => {\n      console.error(error);\n      window.alert(`There was an error!`);\n  });\n};\n\nexport const makeBuyOrder = (dispatch, exchange, token, web3, order, account) => {\n  const tokenGet = token.options.address;\n  const amountGet = web3.utils.toWei(\n  \torder.amount, 'ether');\n  const tokenGive = ETHER_ADDRESS;\n  const amountGive = web3.utils.toWei(\n  \t(order.amount * order.price).toString(),\n  \t'ether'\n  );\n\n  exchange.methods.makeOrder(\n  \ttokenGet, amountGet, tokenGive, amountGive)\n  .send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(buyOrderMaking());\n  })\n  .on('error',(error) => {\n    console.error(error);\n    window.alert(`There was an error!`);\n  });\n};\n\nexport const makeSellOrder = (dispatch, exchange, token, web3, order, account) => {\n  const tokenGet = ETHER_ADDRESS;\n  const amountGet = web3.utils.toWei(\n  \t(order.amount * order.price).toString(),\n  \t'ether');\n  const tokenGive = token.options.address;\n  const amountGive = web3.utils.toWei(\n  \torder.amount, 'ether');\n\n  exchange.methods.makeOrder(\n  \ttokenGet, amountGet, tokenGive, amountGive)\n  .send({ from: account })\n  .on('transactionHash', (hash) => {\n    dispatch(sellOrderMaking());\n  })\n  .on('error',(error) => {\n    console.error(error);\n    window.alert(`There was an error!`);\n  });\n};\n","import React from 'react';\n\nexport const Spinner = ({ type }) => {\n  if(type === 'table') {\n    return(<tbody className=\"spinner-border text-light text-center\"></tbody>);\n  } else {\n    return(<div className=\"spinner-border text-light text-center\"></div>);\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { OverlayTrigger, Tooltip } \nfrom 'react-bootstrap';\nimport {Spinner} from './Spinner';\nimport {\n  orderBookSelector,\n  orderBookLoadedSelector,\n  exchangeSelector,\n  accountSelector,\n  orderFillingSelector\n} from '../store/selectors';\nimport { fillOrder } from '../store/interactions';\n\nconst renderOrder = (order, props) => {\n  const { dispatch, exchange, account } = props;\n\n  return(\n    <OverlayTrigger\n      key={order.id}\n      placement='auto'\n      overlay={\n        <Tooltip id={order.id}>\n        {`Click here to ${order.orderFillAction}`}\n        </Tooltip>\n      }\n    >\n      <tr\n        key={order.id}\n        className=\"order-book-order\"\n        onClick={(e) => fillOrder(\n          dispatch, exchange, order, account\n        )}\n      >\n        <td>{order.tokenAmount}</td>\n        <td className={\n          `text-${order.orderTypeClass}`\n        }>{order.tokenPrice}</td>\n        <td>{order.etherAmount}</td>\n      </tr>\n    </OverlayTrigger>\n  );\n}\n\nconst showOrderBook = (props) => {\n  const { orderBook } = props;\n\n  return(\n    <tbody>\n      {\n        orderBook\n        .sellOrders\n        .map((order) => renderOrder(order, props))}\n      <tr>\n        <th>SCF</th>\n        <th>SCF/ETH</th>\n        <th>ETH</th>\n      </tr>\n      {\n        orderBook\n        .buyOrders\n        .map((order) => renderOrder(order, props))}\n    </tbody>\n  );\n}\n\nclass OrderBook extends Component {\n  render() {\n    return (\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white\">\n          <div className=\"card-header\">\n            Order Book\n          </div>\n          <div className=\"card-body order-book\">\n            <table className=\"table table-dark table-sm small\">\n              {\n               this.props.showOrderBook ?\n               showOrderBook(this.props) :\n               <Spinner type='table' /> \n              }\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const orderBookLoaded =\n   orderBookLoadedSelector(state);\n  const orderFilling = orderFillingSelector(state);\n\n  return {\n    orderBook: orderBookSelector(state),\n    showOrderBook:\n     orderBookLoaded && !orderFilling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(OrderBook);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Spinner} from './Spinner';\nimport {\n  filledOrdersLoadedSelector,\n  filledOrdersSelector\n} from '../store/selectors';\n\nconst showFilledOrders = (filledOrders) => {\n  return(\n    <tbody>\n      { filledOrders.map((order) => {\n        return(\n          <tr className={`order-${order.id}`} \n          key={order.id}>\n            <td className=\"text-muted\">\n            {order.formattedTimestamp}</td>\n            <td>{order.tokenAmount}</td>\n            <td className={\n              `text-${order.tokenPriceClass}`}>\n            {order.tokenPrice}</td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  );\n}\n\nclass Trades extends Component {\n  render() {\n    return (\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white\">\n          <div className=\"card-header\">\n            Trades\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-dark table-sm small\">\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>SCF</th>\n                  <th>SCF/ETH</th>\n                </tr>\n              </thead>\n              { this.props.filledOrdersLoaded ?\n               showFilledOrders(\n               \tthis.props.filledOrders) :\n               \t <Spinner type=\"table\" />\n              }\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filledOrdersLoaded:\n     filledOrdersLoadedSelector(state),\n    filledOrders: filledOrdersSelector(state),\n  };\n}\n\nexport default connect(mapStateToProps)(Trades);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport {Spinner} from './Spinner';\nimport {\n  myFilledOrdersLoadedSelector,\n  myFilledOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  myOpenOrdersSelector,\n  exchangeSelector,\n  accountSelector,\n  orderCancellingSelector\n} from '../store/selectors';\nimport { cancelOrder } \nfrom '../store/interactions';\n\nconst showMyFilledOrders = (props) => {\n  const { myFilledOrders } = props;\n\n  return(\n    <tbody>\n      { myFilledOrders.map((order) => {\n        return (\n          <tr key={order.id}>\n            <td className=\"text-muted\">\n            {order.formattedTimestamp}</td>\n            <td className={\n              `text-${order.orderTypeClass}`\n            }>\n            {order.orderSign}{order.tokenAmount}\n            </td>\n            <td className={\n              `text-${order.orderTypeClass}`\n            }>\n            {order.tokenPrice}\n            </td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  );\n};\n\nconst showMyOpenOrders = (props) => {\n  const { myOpenOrders,\n    dispatch, exchange, account } = props;\n\n  return(\n    <tbody>\n      { myOpenOrders.map((order) => {\n        return (\n          <tr key={order.id}>\n            <td className={\n              `text-${order.orderTypeClass}`\n            }>\n            {order.tokenAmount}\n            </td>\n            <td className={\n              `text-${order.orderTypeClass}`\n            }>\n            {order.tokenPrice}\n            </td>\n            <td\n              className=\"text-muted cancel-order\"\n              onClick={(e) => {\n                cancelOrder(\n                  dispatch,\n                  exchange,\n                  order,\n                  account\n                )\n              }}\n            >X</td>\n          </tr>\n        );\n      }) }\n    </tbody>\n  );\n};\n\nclass MyTransactions extends Component {\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          My Transactions\n        </div>\n        <div className=\"card-body\">\n          <Tabs defaultActiveKey=\"trades\" \n          className=\"bg-dark text-white\">\n            <Tab eventKey=\"trades\" title=\"Trades\" \n            className=\"bg-dark\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>SCF</th>\n                    <th>SCF/ETH</th>\n                  </tr>\n                </thead>\n                { this.props.showMyFilledOrders ?\n                 showMyFilledOrders(this.props) :\n                  <Spinner type=\"table\" />}\n              </table>\n            </Tab>\n            <Tab eventKey=\"orders\" title=\"Orders\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Amount</th>\n                    <th>SCF/ETH</th>\n                    <th>Cancel</th>\n                  </tr>\n                </thead>\n                { this.props.showMyOpenOrders ?\n                 showMyOpenOrders(this.props) :\n                  <Spinner type=\"table\" />}\n              </table>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = \n    myOpenOrdersLoadedSelector(state);\n  const orderCancelling = \n    orderCancellingSelector(state);\n\n  return {\n    myFilledOrders: myFilledOrdersSelector(state),\n    showMyFilledOrders:\n     myFilledOrdersLoadedSelector(state),\n    myOpenOrders: myOpenOrdersSelector(state),\n    showMyOpenOrders:\n     myOpenOrdersLoaded && !orderCancelling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  };\n}\n\nexport default connect(\n  mapStateToProps\n  )(\n  MyTransactions\n  );\n","export const chartOptions = {\n  chart: {\n    animations: { enabled: false },\n    toolbar: { show: false },\n    width: '100px'\n  },\n  tooltip: {\n    enabled: true,\n    theme: false,\n    style: {\n      fontSize: '12px',\n      fontFamily: undefined\n    },\n    x: {\n        show: false,\n        format: 'dd MMM',\n        formatter: undefined,\n    },\n    y: {\n      show: true,\n      title: 'price'\n    },\n    marker: {\n      show: false,\n    },\n    items: {\n       display: 'flex',\n    },\n    fixed: {\n        enabled: false,\n        position: 'topRight',\n        offsetX: 0,\n        offsetY: 0,\n    },\n  },\n  xaxis: {\n    type: 'datetime',\n    labels: {\n      show: true,\n      style: {\n          colors: '#fff',\n          fontSize: '8px',\n          cssClass: 'apexcharts-xaxis-label',\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      show: true,\n      minWidth: 0,\n      maxWidth: 160,\n      style: {\n        color: '#fff',\n        fontSize: '8px',\n        cssClass: 'apexcharts-yaxis-label',\n      },\n      offsetX: 0,\n      offsetY: 0,\n      rotate: 0,\n    }\n  }\n}\n\nexport const dummyData = [\n  {\n    data: [\n      {\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      },\n      {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      },\n      {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      },\n      {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      },\n      {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      },\n      {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      },\n      {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      },\n      {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      },\n      {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      },\n      {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      },\n      {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      },\n      {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      },\n      {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      },\n      {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      },\n      {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      },\n      {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      },\n      {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      },\n      {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      },\n      {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      },\n      {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      },\n      {\n        x: new Date(1538814600000),\n        y: [6615.53, 6617.93, 6610, 6615.19]\n      },\n      {\n        x: new Date(1538816400000),\n        y: [6615.19, 6621.6, 6608.2, 6620]\n      },\n      {\n        x: new Date(1538818200000),\n        y: [6619.54, 6625.17, 6614.15, 6620]\n      },\n      {\n        x: new Date(1538820000000),\n        y: [6620.33, 6634.15, 6617.24, 6624.61]\n      },\n      {\n        x: new Date(1538821800000),\n        y: [6625.95, 6626, 6611.66, 6617.58]\n      },\n      {\n        x: new Date(1538823600000),\n        y: [6619, 6625.97, 6595.27, 6598.86]\n      },\n      {\n        x: new Date(1538825400000),\n        y: [6598.86, 6598.88, 6570, 6587.16]\n      },\n      {\n        x: new Date(1538827200000),\n        y: [6588.86, 6600, 6580, 6593.4]\n      },\n      {\n        x: new Date(1538829000000),\n        y: [6593.99, 6598.89, 6585, 6587.81]\n      },\n      {\n        x: new Date(1538830800000),\n        y: [6587.81, 6592.73, 6567.14, 6578]\n      },\n      {\n        x: new Date(1538832600000),\n        y: [6578.35, 6581.72, 6567.39, 6579]\n      },\n      {\n        x: new Date(1538834400000),\n        y: [6579.38, 6580.92, 6566.77, 6575.96]\n      },\n      {\n        x: new Date(1538836200000),\n        y: [6575.96, 6589, 6571.77, 6588.92]\n      },\n      {\n        x: new Date(1538838000000),\n        y: [6588.92, 6594, 6577.55, 6589.22]\n      },\n      {\n        x: new Date(1538839800000),\n        y: [6589.3, 6598.89, 6589.1, 6596.08]\n      },\n      {\n        x: new Date(1538841600000),\n        y: [6597.5, 6600, 6588.39, 6596.25]\n      },\n      {\n        x: new Date(1538843400000),\n        y: [6598.03, 6600, 6588.73, 6595.97]\n      },\n      {\n        x: new Date(1538845200000),\n        y: [6595.97, 6602.01, 6588.17, 6602]\n      },\n      {\n        x: new Date(1538847000000),\n        y: [6602, 6607, 6596.51, 6599.95]\n      },\n      {\n        x: new Date(1538848800000),\n        y: [6600.63, 6601.21, 6590.39, 6591.02]\n      },\n      {\n        x: new Date(1538850600000),\n        y: [6591.02, 6603.08, 6591, 6591]\n      },\n      {\n        x: new Date(1538852400000),\n        y: [6591, 6601.32, 6585, 6592]\n      },\n      {\n        x: new Date(1538854200000),\n        y: [6593.13, 6596.01, 6590, 6593.34]\n      },\n      {\n        x: new Date(1538856000000),\n        y: [6593.34, 6604.76, 6582.63, 6593.86]\n      },\n      {\n        x: new Date(1538857800000),\n        y: [6593.86, 6604.28, 6586.57, 6600.01]\n      },\n      {\n        x: new Date(1538859600000),\n        y: [6601.81, 6603.21, 6592.78, 6596.25]\n      },\n      {\n        x: new Date(1538861400000),\n        y: [6596.25, 6604.2, 6590, 6602.99]\n      },\n      {\n        x: new Date(1538863200000),\n        y: [6602.99, 6606, 6584.99, 6587.81]\n      },\n      {\n        x: new Date(1538865000000),\n        y: [6587.81, 6595, 6583.27, 6591.96]\n      },\n      {\n        x: new Date(1538866800000),\n        y: [6591.97, 6596.07, 6585, 6588.39]\n      },\n      {\n        x: new Date(1538868600000),\n        y: [6587.6, 6598.21, 6587.6, 6594.27]\n      },\n      {\n        x: new Date(1538870400000),\n        y: [6596.44, 6601, 6590, 6596.55]\n      },\n      {\n        x: new Date(1538872200000),\n        y: [6598.91, 6605, 6596.61, 6600.02]\n      },\n      {\n        x: new Date(1538874000000),\n        y: [6600.55, 6605, 6589.14, 6593.01]\n      },\n      {\n        x: new Date(1538875800000),\n        y: [6593.15, 6605, 6592, 6603.06]\n      },\n      {\n        x: new Date(1538877600000),\n        y: [6603.07, 6604.5, 6599.09, 6603.89]\n      },\n      {\n        x: new Date(1538879400000),\n        y: [6604.44, 6604.44, 6600, 6603.5]\n      },\n      {\n        x: new Date(1538881200000),\n        y: [6603.5, 6603.99, 6597.5, 6603.86]\n      },\n      {\n        x: new Date(1538883000000),\n        y: [6603.85, 6605, 6600, 6604.07]\n      },\n      {\n        x: new Date(1538884800000),\n        y: [6604.98, 6606, 6604.07, 6606]\n      },\n    ]\n  }\n]\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from 'react-apexcharts';\nimport {Spinner} from './Spinner';\nimport { chartOptions } from './PriceChart.config';\nimport {\n  priceChartLoadedSelector,\n  priceChartSelector\n} from '../store/selectors';\n\nconst priceSymbol = (lastPriceChange) => {\n  let output;\n  if(lastPriceChange === '+') {\n    output = <span className=\"text-success\">\n    &#9650;</span> // Green up tiangle\n  } else {\n    output = <span className=\"text-danger\">\n    &#9660;</span> // Red down triangle\n  }\n  return(output);\n};\n\nconst showPriceChart = (priceChart) => {\n  return(\n    <div className=\"price-chart\">\n      <div className=\"price\">\n        <h4>\"SCF/ETH\" &nbsp; \n        {priceSymbol(priceChart.lastPriceChange)} \n        &nbsp; {priceChart.lastPrice}\n        </h4>\n      </div>\n      <Chart \n      options={chartOptions} \n      series={priceChart.series} \n      type='candlestick' width='100%' \n      height='100%' \n      />\n    </div>\n  );\n};\n\nclass PriceChart extends Component {\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Price Chart\n        </div>\n        <div className=\"card-body\">\n          {this.props.priceChartLoaded ?\n           showPriceChart(this.props.priceChart) :\n           <Spinner />}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n\n  return {\n    priceChartLoaded:\n     priceChartLoadedSelector(state),\n    priceChart: priceChartSelector(state),\n  };\n}\n\nexport default connect(mapStateToProps)(PriceChart);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport {Spinner} from './Spinner';\nimport {\n  loadBalances,\n  depositEther,\n  depositToken,\n  withdrawEther,\n  withdrawToken\n} from '../store/interactions';\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  etherBalanceSelector,\n  tokenBalanceSelector,\n  exchangeEtherBalanceSelector,\n  exchangeTokenBalanceSelector,\n  balancesLoadingSelector,\n  etherDepositAmountSelector,\n  etherWithdrawAmountSelector,\n  tokenDepositAmountSelector,\n  tokenWithdrawAmountSelector,\n} from '../store/selectors';\nimport {\n  etherDepositAmountChanged,\n  etherWithdrawAmountChanged,\n  tokenDepositAmountChanged,\n  tokenWithdrawAmountChanged,\n} from '../store/actions';\nconst showForm = (props) => {\n  const {\n    dispatch,\n    exchange,\n    web3,\n    account,\n    etherBalance,\n    tokenBalance,\n    exchangeEtherBalance,\n    exchangeTokenBalance,\n    etherDepositAmount,\n    token,\n    tokenDepositAmount,\n    etherWithdrawAmount,\n    tokenWithdrawAmount\n  } = props;\n\n  \n  return(\n\n    <Tabs defaultActiveKey=\"deposit\" \n    className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"deposit\" title=\"Deposit\" \n      className=\"bg-dark\">\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" \n        onSubmit={(event) => {\n          event.preventDefault();\n          depositEther(\n            dispatch,\n            exchange,\n            web3,\n            etherDepositAmount,\n            account,\n            token\n          );\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch(\n             etherDepositAmountChanged(\n              e.target.value) \n            )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-info btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>SCF</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" \n        onSubmit={(event) => {\n          event.preventDefault();\n          depositToken(\n            dispatch,\n            exchange,\n            web3,\n            token,\n            tokenDepositAmount,\n            account\n          );\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"SCF Amount\"\n            onChange={(e) => dispatch(\n             tokenDepositAmountChanged(\n              e.target.value) \n            )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-info btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"withdraw\" title=\"Withdraw\" \n      className=\"bg-dark\">\n\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>{etherBalance}</td>\n              <td>{exchangeEtherBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" \n        onSubmit={(event) => {\n          event.preventDefault();\n          withdrawEther(\n            dispatch,\n            exchange,\n            web3,\n            etherWithdrawAmount,\n            account,\n            token\n          );\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            onChange={(e) => dispatch(\n             etherWithdrawAmountChanged(\n              e.target.value) \n            )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-info btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>SCF</td>\n              <td>{tokenBalance}</td>\n              <td>{exchangeTokenBalance}</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\" \n        onSubmit={(event) => {\n          event.preventDefault();\n          withdrawToken(\n            dispatch,\n            exchange,\n            web3,\n            token,\n            tokenWithdrawAmount,\n            account\n          );\n        }}>\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DAPP Amount\"\n            onChange={(e) => dispatch(\n             tokenWithdrawAmountChanged(\n              e.target.value) \n            )}\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-info btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n      </Tab>\n    </Tabs>\n\n  );\n  \n\n}\n\nclass Balance extends Component {\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const { \n      dispatch,\n      web3,\n      exchange,\n      token,\n      account\n    } = this.props;\n    await loadBalances(\n      dispatch,\n      web3,\n      exchange,\n      token,\n      account\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Balance        \n        </div>\n        <div className=\"card-body\">\n          {this.props.showForm ?\n           showForm(this.props) :\n            <Spinner />}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const balancesLoading = balancesLoadingSelector(\n    state);\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance:\n     exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance:\n     exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: !balancesLoading,\n    etherDepositAmount:\n     etherDepositAmountSelector(state),\n    etherWithdrawAmount:\n     etherWithdrawAmountSelector(state),\n    tokenDepositAmount:\n     tokenDepositAmountSelector(state),\n    tokenWithdrawAmount:\n     tokenWithdrawAmountSelector(state),\n  };\n}\n\nexport default connect(mapStateToProps)(Balance);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport {Spinner} from './Spinner';\nimport {\n  exchangeSelector,\n  tokenSelector,\n  accountSelector,\n  web3Selector,\n  buyOrderSelector,\n  sellOrderSelector\n} from '../store/selectors';\nimport {\n  buyOrderAmountChanged,\n  buyOrderPriceChanged,\n  sellOrderAmountChanged,\n  sellOrderPriceChanged,\n} from '../store/actions';\nimport {\n  makeBuyOrder,\n  makeSellOrder\n} from '../store/interactions';\n\nconst showForm = (props) => {\n  const {\n    dispatch,\n    buyOrder,\n    exchange,\n    token,\n    web3,\n    account,\n    sellOrder,\n    showBuyTotal,\n    showSellTotal\n  } = props;\n\n  return(\n    <Tabs defaultActiveKey=\"buy\" \n    className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"buy\" title=\"Buy\" \n      className=\"bg-dark\">\n\n          <form onSubmit={(event) => {\n            event.preventDefault();\n            makeBuyOrder(\n              dispatch,\n              exchange,\n              token,\n              web3,\n              buyOrder,\n              account\n            );\n          }}>\n          <div className=\"form-group small\">\n            <label>Buy Amount (SCF)</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-dark text-white\"\n                placeholder=\"Buy Amount\"\n                onChange={(e) => dispatch(\n                 buyOrderAmountChanged(\n                  e.target.value ) \n                )}\n                required\n              />\n            </div>\n          </div>\n          <div className=\"form-group small\">\n            <label>Buy Price</label>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm bg-dark text-white\"\n                placeholder=\"Buy Price\"\n                onChange={(e) => dispatch(\n                 buyOrderPriceChanged(\n                  e.target.value ) \n                )}\n                required\n              />\n            </div>\n          </div>\n          <button type=\"submit\" \n          className=\"btn btn-info btn-sm btn-block\">Buy Order</button>\n          { \n            showBuyTotal ?\n           <small>\n            Total: {\n            buyOrder.amount * buyOrder.price\n            } ETH\n           </small> :\n            null \n          }\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"sell\" title=\"Sell\" \n      className=\"bg-dark\">\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n          makeSellOrder(\n            dispatch,\n            exchange,\n            token,\n            web3,\n            sellOrder,\n            account\n          );\n        }}>\n        <div className=\"form-group small\">\n          <label>Sell Amount (SCF)</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm bg-dark text-white\"\n              placeholder=\"Sell amount\"\n              onChange={(e) => dispatch(\n               sellOrderAmountChanged(\n                e.target.value ) \n              )}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"form-group small\">\n          <label>Sell Price</label>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-sm bg-dark text-white\"\n              placeholder=\"Sell Price\"\n              onChange={(e) => dispatch(\n               sellOrderPriceChanged(\n                e.target.value ) \n              )}\n              required\n            />\n          </div>\n        </div>\n        <button type=\"submit\" \n        className=\"btn btn-info btn-sm btn-block\">Sell Order</button>\n        {\n         showSellTotal ?\n         <small>\n         Total: {\n          sellOrder.amount * sellOrder.price\n         } ETH\n         </small> :\n          null \n        }\n      </form>\n\n      </Tab>\n    </Tabs>\n  );\n}\n\nclass NewOrder extends Component {\n\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          New Order\n        </div>\n        <div className=\"card-body\">\n          {\n            this.props.showForm ?\n            showForm(this.props) :\n            <Spinner />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const buyOrder = buyOrderSelector(state);\n  const sellOrder = sellOrderSelector(state);\n\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    buyOrder,\n    sellOrder,\n    showForm:\n     !buyOrder.making && !sellOrder.making,\n    showBuyTotal:\n     buyOrder.amount && buyOrder.price,\n    showSellTotal:\n     sellOrder.amount && sellOrder.price\n  };\n}\n\nexport default connect(mapStateToProps)(NewOrder);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { exchangeSelector } from '../store/selectors';\nimport { loadAllOrders, subscribeToEvents } \nfrom '../store/interactions';\n\nimport OrderBook from './OrderBook';\nimport Trades from './Trades';\nimport MyTransactions from './MyTransactions';\nimport PriceChart from './PriceChart';\nimport Balance from './Balance';\nimport NewOrder from './NewOrder';\n\nclass Content extends Component {\n  componentDidMount() {\n    this.loadBlockchainData(this.props);\n  }\n\n  async loadBlockchainData(props) {\n    const { dispatch, exchange } = props;\n    await loadAllOrders(exchange, dispatch);\n    await subscribeToEvents(exchange, dispatch);\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"vertical-split\">\n          <Balance />\n          <NewOrder />\n        </div>\n        <OrderBook />\n        <Trades />\n        <div className=\"vertical-split\">\n          <PriceChart />          \n          <MyTransactions />\n        </div>\n        \n        \n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    exchange: exchangeSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Content);\n","import React, { Component } from 'react';\nimport { Tabs, Tab  }\nfrom 'react-bootstrap';\nimport {Spinner} from './Spinner';\n\nclass PreContent extends Component {\n\n  render() {\n    return (<div>\n{/*\n  ----navbar----\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\" role=\"navigation\">\n          <a className=\"navbar-brand\" href=\"https://akmb-dev.github.io/SCF-Dex/\"> SCF Dex </a>\n\n        <button className=\"navbar-toggler\" \n        type=\"button\" data-toggle=\"collapse\" \n        data-target=\"#navbarNavDropdown\" \n        aria-controls=\"navbarNavDropdown\" \n        aria-expanded=\"false\" \n        aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\">\n          </span>\n        </button>\n\n      <div className=\"container\">\n        <ul className=\"nav navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link small\"\n              href={`https://etherscan.io/address/${this.props.account}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {this.props.account}\n            </a>\n          </li>\n        </ul>\n      </div>\n\n      </nav>\n*/}\n\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary z-index-1\" role=\"navigation\">\n  <a className=\"navbar-brand\" href=\"https://akmb-dev.github.io/SCF-Dex/\"> SCF Dex </a>\n         <div className=\"z-index-2\">        \n         <Spinner />        \n         </div>\n         </nav>\n\n{/* Content */}\n<div className=\"content\">\n\n        <div className=\"vertical-split\">\n\n\n          {/* Balance */}\n\n        <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Balance        \n        </div>\n        <div className=\"card-body\">\n\n\n<Tabs defaultActiveKey=\"deposit\" \n    className=\"bg-dark text-white\">\n\n      <Tab eventKey=\"deposit\" title=\"Deposit\" \n      className=\"bg-dark\">\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>0.00</td>\n              <td>0.00</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\">\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>SCF</td>\n              <td>0.00</td>\n              <td>0.00</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\">\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"SCF Amount\"\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-primary btn-block btn-sm\">Deposit</button>\n          </div>\n        </form>\n\n      </Tab>\n\n      <Tab eventKey=\"withdraw\" title=\"Withdraw\" \n      className=\"bg-dark\">\n\n        <table className=\"table table-dark table-sm small\">\n          <thead>\n            <tr>\n              <th>Token</th>\n              <th>Wallet</th>\n              <th>Exchange</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>ETH</td>\n              <td>0.00</td>\n              <td>0.00</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\">\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"ETH Amount\"\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n        <table className=\"table table-dark table-sm small\">\n          <tbody>\n            <tr>\n              <td>SCF</td>\n              <td>0.00</td>\n              <td>0.00</td>\n            </tr>\n          </tbody>\n        </table>\n\n        <form className=\"row\">\n          <div className=\"col-12 col-sm pr-sm-2\">\n            <input\n            type=\"text\"\n            placeholder=\"DAPP Amount\"\n            className=\"form-control form-control-sm bg-dark text-white\"\n            required />\n          </div>\n          <div className=\"col-12 col-sm-auto pl-sm-0\">\n            <button type=\"submit\" \n            className=\"btn btn-primary btn-block btn-sm\">Withdraw</button>\n          </div>\n        </form>\n\n      </Tab>\n    </Tabs>\n\n        </div>\n        </div>\n\n\n          {/* NewOrder */}\n       <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          New Order\n        </div>\n        <div className=\"card-body\">\n          \n          <Tabs defaultActiveKey=\"buy\" \n          className=\"bg-dark text-white\">\n\n            <Tab eventKey=\"buy\" title=\"Buy\" \n            className=\"bg-dark\">\n\n                <form>\n                <div className=\"form-group small\">\n                  <label>Buy Amount (SCF)</label>\n                  <div className=\"input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-sm bg-dark text-white\"\n                      placeholder=\"Buy Amount\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group small\">\n                  <label>Buy Price</label>\n                  <div className=\"input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-sm bg-dark text-white\"\n                      placeholder=\"Buy Price\"\n                      required\n                    />\n                  </div>\n                </div>\n                <button type=\"submit\" \n                className=\"btn btn-primary btn-sm btn-block\">Buy Order</button>\n              </form>\n\n            </Tab>\n\n            <Tab eventKey=\"sell\" title=\"Sell\" \n            className=\"bg-dark\">\n\n              <form>\n              <div className=\"form-group small\">\n                <label>Sell Amount (SCF)</label>\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-sm bg-dark text-white\"\n                    placeholder=\"Sell amount\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"form-group small\">\n                <label>Sell Price</label>\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-sm bg-dark text-white\"\n                    placeholder=\"Sell Price\"\n                    required\n                  />\n                </div>\n              </div>\n              <button type=\"submit\" \n              className=\"btn btn-primary btn-sm btn-block\">Sell Order</button>\n            </form>\n            </Tab>\n          </Tabs>\n \n        </div>\n      </div>\n\n\n        </div>\n\n\n        {/* OrderBook */}\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white\">\n          <div className=\"card-header\">\n            Order Book\n          </div>\n          <div className=\"card-body order-book\">\n            <table className=\"table table-dark table-sm small\">\n              <tbody>\n                <tr className=\"order-book-order\">\n                  <td>0.00</td>\n                  <td className=\"text-danger\">0.00</td>\n                  <td>0.00</td>\n                </tr>\n                <tr>\n                  <th>SCF</th>\n                  <th>SCF/ETH</th>\n                  <th>ETH</th>\n                </tr>\n                <tr className=\"order-book-order\">\n                  <td>0.00</td>\n                  <td className=\"text-success\">0.00</td>\n                  <td>0.00</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n\n        <div className=\"vertical-split\">\n\n\n          {/* PriceChart */}\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          Price Chart\n        </div>\n        <div className=\"card-body\">\n          <div className=\"price-chart\">\n            <div className=\"price\">\n              <h4>\"SCF/ETH\" &nbsp; \n              &#9651;\n              &nbsp; 0.00\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n          {/* MyTransactions */}\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          My Transactions\n        </div>\n        <div className=\"card-body\">\n          <Tabs defaultActiveKey=\"trades\" \n          className=\"bg-dark text-white\">\n            <Tab eventKey=\"trades\" title=\"Trades\" \n            className=\"bg-dark\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>SCF</th>\n                    <th>SCF/ETH</th>\n                  </tr>\n                </thead>\n                <tbody>\n                      <tr>\n                        <td className=\"text-muted\">\n                          00:00:00 am 00/00\n                        </td>\n                        <td className=\"text-success\">\n                        +000\n                        </td>\n                        <td className=\"text-success\">\n                        0.000000\n                        </td>\n                      </tr>\n                      <tr>\n                        <td className=\"text-muted\">\n                          00:00:00 am 00/00\n                        </td>\n                        <td className=\"text-danger\">\n                        -000\n                        </td>\n                        <td className=\"text-danger\">\n                        0.000000\n                        </td>\n                      </tr>\n                </tbody>\n              </table>\n            </Tab>\n            <Tab eventKey=\"orders\" title=\"Orders\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Amount</th>\n                    <th>SCF/ETH</th>\n                    <th>Cancel</th>\n                  </tr>\n                </thead>\n                <tbody>\n                      <tr >\n                        <td className=\"text-danger\">\n                        000\n                        </td>\n                        <td className=\"text-danger\">\n                        0.00001\n                        </td>\n                        <td\n                          className=\"text-muted cancel-order\"\n                        >X</td>\n                      </tr>\n                       <tr >\n                        <td className=\"text-success\">\n                        000\n                        </td>\n                        <td className=\"text-success\">\n                        0.00001\n                        </td>\n                        <td\n                          className=\"text-muted cancel-order\"\n                        >X</td>\n                      </tr>\n                </tbody>\n              </table>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n\n\n        </div>\n\n\n\n        {/*} Trades */}\n      <div className=\"vertical\">\n        <div className=\"card bg-dark text-white\">\n          <div className=\"card-header\">\n            Trades\n          </div>\n          <div className=\"card-body\">\n            <table className=\"table table-dark table-sm small\">\n              <thead>\n                <tr>\n                  <th>Time</th>\n                  <th>SCF</th>\n                  <th>SCF/ETH</th>\n                </tr>\n              </thead>\n                <tbody>\n                      <tr>\n                        <td className=\"text-muted\">\n                        00:00:00 am 00/00\n                        </td>\n                        <td>000</td>\n                        <td className=\"text-success\">\n                        0.000000</td>\n                      </tr>\n                                <tr>\n                        <td className=\"text-muted\">\n                        00:00:00 am 00/00\n                        </td>\n                        <td>000</td>\n                        <td className=\"text-danger\">\n                        0.000000</td>\n                      </tr>\n                                <tr>\n                        <td className=\"text-muted\">\n                        00:00:00 am 00/00\n                        </td>\n                        <td>000</td>\n                        <td className=\"text-success\">\n                        0.000000</td>\n                      </tr>\n                </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n        \n</div>\n\n    </div>);\n  }\n}\n\nexport default PreContent;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport PreContent from './PreContent';\nimport {Spinner} from './Spinner';\nimport { connect } from 'react-redux';\nimport {\n  loadWeb3,\n  loadAccount,\n  loadToken,\n  loadExchange\n} from '../store/interactions';\nimport { contractsLoadedSelector } \nfrom '../store/selectors';\n\nclass App extends Component {\n  componentDidMount() {\n   this.loadBlockchainData(this.props.dispatch);\n  }\n\n  async loadBlockchainData(dispatch) {\n    const web3 = await loadWeb3(dispatch);\n    const networkId = await web3.eth.net.getId();\n    await loadAccount(web3, dispatch);\n    const token = await loadToken(\n      web3,\n      networkId,\n      dispatch\n    );\n    if(!token) {\n      window.alert('Token smart contract not detected on the current network. Please select \"kovan test network\" with Metamask.');\n      return;\n    }\n    const exchange = await loadExchange(\n      web3,\n      networkId,\n      dispatch\n    );\n    if(!exchange) {\n      window.alert('Exchange smart contract not detected on the current network. Please select \"kovan test network\" with Metamask.');\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        {\n         this.props.contractsLoaded ?\n        <div>\n        <Navbar /> \n         <Content />\n         </div>:\n         \n         <PreContent />\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return {\n       ...state,\n       connection: action.connection \n      };\n    case 'WEB3_ACCOUNT_LOADED':\n      return {\n       ...state,\n       account: action.account\n      };\n    case 'ETHER_BALANCE_LOADED':\n      return {\n       ...state,\n       balance: action.balance \n      };\n    default:\n      return state;\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return {\n       ...state, \n       loaded: true, \n       contract: action.contract \n      };\n    case 'TOKEN_BALANCE_LOADED':\n      return {\n       ...state, \n       balance: action.balance \n      };\n    default:\n      return state;\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return {\n       ...state, \n       loaded: true, \n       contract: action.contract \n      };\n    case 'CANCELLED_ORDERS_LOADED':\n      return {\n       ...state, \n       cancelledOrders: {\n        loaded: true, \n        data: action.cancelledOrders \n       } \n      };\n    case 'FILLED_ORDERS_LOADED':\n      return {\n       ...state,\n       filledOrders: {\n        loaded: true, \n        data: action.filledOrders \n       } \n      };\n    case 'ALL_ORDERS_LOADED':\n      return {\n       ...state,\n       allOrders: {\n        loaded: true,\n        data: action.allOrders\n       } \n      };\n    case 'ORDER_CANCELLING':\n      return {\n       ...state,\n       orderCancelling: true \n      };\n    case 'ORDER_CANCELLED':\n      return {\n        ...state,\n        orderCancelling: false,\n        cancelledOrders: {\n          ...state.cancelledOrders,\n          data: [\n            ...state.cancelledOrders.data,\n            action.order\n          ]\n        }\n      };\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data\n      .findIndex(\n      \torder => order.id === action.order.id\n      );\n\n      if(index === -1) {\n        data = [\n        ...state.filledOrders.data,\n        action.order\n        ];\n      } else {\n        data = state.filledOrders.data;\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      };\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true };\n\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return {\n       ...state, \n       etherBalance: action.balance \n      };\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return {\n       ...state,\n       tokenBalance: action.balance \n      };\n    case 'BALANCES_LOADING':\n      return {\n       ...state, \n       balancesLoading: true \n      };\n    case 'BALANCES_LOADED':\n      return {\n       ...state, \n       balancesLoading: false \n      };\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return {\n       ...state, \n       etherDepositAmount: action.amount \n      };\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return {\n       ...state, \n       etherWithdrawAmount: action.amount \n      };\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return {\n       ...state, \n       tokenDepositAmount: action.amount \n      };\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return {\n       ...state,\n       tokenWithdrawAmount: action.amount \n      };\n\n    case 'BUY_ORDER_AMOUNT_CHANGED':\n      return {\n       ...state, \n       buyOrder: {\n        ...state.buyOrder,\n        amount: action.amount \n       } \n      };\n    case 'BUY_ORDER_PRICE_CHANGED':\n      return {\n       ...state,\n       buyOrder: {\n        ...state.buyOrder,\n        price: action.price \n       } \n      };\n    case 'BUY_ORDER_MAKING':\n      return {\n       ...state, \n       buyOrder: {\n        ...state.buyOrder, \n        amount: null, \n        price: null, \n        making: true \n       } \n      };\n\n    case 'ORDER_MADE':\n      // Prevent duplicate orders\n      index = state.allOrders.data\n      .findIndex(\n      \torder => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [\n          ...state.allOrders.data, \n          action.order\n        ];\n      } else {\n        data = state.allOrders.data;\n      }\n\n      return {\n        ...state,\n        allOrders: {\n          ...state.allOrders,\n          data\n        },\n        buyOrder: {\n          ...state.buyOrder,\n          making: false\n        },\n        sellOrder: {\n          ...state.sellOrder,\n          making: false\n        }\n      };\n\n    case 'SELL_ORDER_AMOUNT_CHANGED':\n      return {\n       ...state, \n       sellOrder: {\n        ...state.sellOrder, \n        amount: action.amount \n       } \n      };\n    case 'SELL_ORDER_PRICE_CHANGED':\n      return {\n       ...state, \n       sellOrder: {\n        ...state.sellOrder,\n        price: action.price \n       } \n      };\n    case 'SELL_ORDER_MAKING':\n      return {\n       ...state,\n       sellOrder: {\n        ...state.sellOrder, \n        amount: null, \n        price: null, \n        making: true \n       } \n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n});\n\nexport default rootReducer;\n","import { \n\tcreateStore,\n\tapplyMiddleware,\n\tcompose \n} from 'redux';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n// For Redux Dev Tools\nconst composeEnhancers = window\n.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(\n\tpreloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}